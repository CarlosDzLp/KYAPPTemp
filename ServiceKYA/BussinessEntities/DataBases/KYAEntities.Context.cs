//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BussinessEntities.DataBases
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KYAEntities : DbContext
    {
        public KYAEntities()
            : base("name=KYAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spDeleteAdditionalFeatures(Nullable<System.Guid> idAdditional)
        {
            var idAdditionalParameter = idAdditional.HasValue ?
                new ObjectParameter("IdAdditional", idAdditional) :
                new ObjectParameter("IdAdditional", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteAdditionalFeatures", idAdditionalParameter);
        }
    
        public virtual int spDeleteCompany(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteCompany", idParameter);
        }
    
        public virtual int spDeleteMonthlyPayment(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteMonthlyPayment", idParameter);
        }
    
        public virtual int spDeleteRooms(Nullable<System.Guid> idRoom)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteRooms", idRoomParameter);
        }
    
        public virtual int spDeleteRoomService(Nullable<System.Guid> idRoomService)
        {
            var idRoomServiceParameter = idRoomService.HasValue ?
                new ObjectParameter("IdRoomService", idRoomService) :
                new ObjectParameter("IdRoomService", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteRoomService", idRoomServiceParameter);
        }
    
        public virtual int spDeleteService(Nullable<System.Guid> idService)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("IdService", idService) :
                new ObjectParameter("IdService", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteService", idServiceParameter);
        }
    
        public virtual int spDeleteTenants(Nullable<System.Guid> idTenants)
        {
            var idTenantsParameter = idTenants.HasValue ?
                new ObjectParameter("IdTenants", idTenants) :
                new ObjectParameter("IdTenants", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteTenants", idTenantsParameter);
        }
    
        public virtual int spDeleteUserKYA(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteUserKYA", userIdParameter);
        }
    
        public virtual int spInsertAdditionalFeatures(string description, Nullable<decimal> price, Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.Guid> id, Nullable<System.DateTime> dateCreated)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertAdditionalFeatures", descriptionParameter, priceParameter, idRoomParameter, userIdParameter, idParameter, dateCreatedParameter);
        }
    
        public virtual int spInsertCompany(string name, string address, string telephone, Nullable<System.DateTime> date)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertCompany", nameParameter, addressParameter, telephoneParameter, dateParameter);
        }
    
        public virtual int spInsertMonthlyPayment(string date, Nullable<decimal> price, Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.DateTime> dateCreated)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertMonthlyPayment", dateParameter, priceParameter, idRoomParameter, userIdParameter, dateCreatedParameter);
        }
    
        public virtual int spInsertRooms(string nameRoom, Nullable<System.DateTime> date, Nullable<decimal> price)
        {
            var nameRoomParameter = nameRoom != null ?
                new ObjectParameter("NameRoom", nameRoom) :
                new ObjectParameter("NameRoom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertRooms", nameRoomParameter, dateParameter, priceParameter);
        }
    
        public virtual int spInsertRoomService(Nullable<System.Guid> idService, Nullable<System.Guid> idRoom, Nullable<System.DateTime> date)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("IdService", idService) :
                new ObjectParameter("IdService", typeof(System.Guid));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertRoomService", idServiceParameter, idRoomParameter, dateParameter);
        }
    
        public virtual int spInsertService(string nameService, Nullable<decimal> priceService, Nullable<System.DateTime> date)
        {
            var nameServiceParameter = nameService != null ?
                new ObjectParameter("NameService", nameService) :
                new ObjectParameter("NameService", typeof(string));
    
            var priceServiceParameter = priceService.HasValue ?
                new ObjectParameter("PriceService", priceService) :
                new ObjectParameter("PriceService", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertService", nameServiceParameter, priceServiceParameter, dateParameter);
        }
    
        public virtual int spInsertTenants(Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.DateTime> date)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTenants", idRoomParameter, userIdParameter, dateParameter);
        }
    
        public virtual int spInsertUserKYA(string userName, string userUser, string userPassword, string userTelephone, string userAddress, Nullable<System.DateTime> userDateCreated, Nullable<System.DateTime> userDateModified)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userUserParameter = userUser != null ?
                new ObjectParameter("UserUser", userUser) :
                new ObjectParameter("UserUser", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userTelephoneParameter = userTelephone != null ?
                new ObjectParameter("UserTelephone", userTelephone) :
                new ObjectParameter("UserTelephone", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("UserAddress", userAddress) :
                new ObjectParameter("UserAddress", typeof(string));
    
            var userDateCreatedParameter = userDateCreated.HasValue ?
                new ObjectParameter("UserDateCreated", userDateCreated) :
                new ObjectParameter("UserDateCreated", typeof(System.DateTime));
    
            var userDateModifiedParameter = userDateModified.HasValue ?
                new ObjectParameter("UserDateModified", userDateModified) :
                new ObjectParameter("UserDateModified", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUserKYA", userNameParameter, userUserParameter, userPasswordParameter, userTelephoneParameter, userAddressParameter, userDateCreatedParameter, userDateModifiedParameter);
        }
    
        public virtual int spInsMessage(Nullable<System.Guid> messageID, Nullable<System.Guid> userId, Nullable<System.Guid> id, string message, Nullable<bool> status, byte[] source, Nullable<int> typeMessage, Nullable<bool> typeSendUser, string messageString, Nullable<System.DateTime> dateCreated)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("MessageID", messageID) :
                new ObjectParameter("MessageID", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(byte[]));
    
            var typeMessageParameter = typeMessage.HasValue ?
                new ObjectParameter("TypeMessage", typeMessage) :
                new ObjectParameter("TypeMessage", typeof(int));
    
            var typeSendUserParameter = typeSendUser.HasValue ?
                new ObjectParameter("TypeSendUser", typeSendUser) :
                new ObjectParameter("TypeSendUser", typeof(bool));
    
            var messageStringParameter = messageString != null ?
                new ObjectParameter("MessageString", messageString) :
                new ObjectParameter("MessageString", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsMessage", messageIDParameter, userIdParameter, idParameter, messageParameter, statusParameter, sourceParameter, typeMessageParameter, typeSendUserParameter, messageStringParameter, dateCreatedParameter);
        }
    
        public virtual int spInsNotification(string playerID, string pushToken, Nullable<System.Guid> idUser, Nullable<bool> typeUser)
        {
            var playerIDParameter = playerID != null ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(string));
    
            var pushTokenParameter = pushToken != null ?
                new ObjectParameter("PushToken", pushToken) :
                new ObjectParameter("PushToken", typeof(string));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var typeUserParameter = typeUser.HasValue ?
                new ObjectParameter("TypeUser", typeUser) :
                new ObjectParameter("TypeUser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsNotification", playerIDParameter, pushTokenParameter, idUserParameter, typeUserParameter);
        }
    
        public virtual int spPaymentMonthly(Nullable<System.Guid> idMonthly)
        {
            var idMonthlyParameter = idMonthly.HasValue ?
                new ObjectParameter("IdMonthly", idMonthly) :
                new ObjectParameter("IdMonthly", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPaymentMonthly", idMonthlyParameter);
        }
    
        public virtual ObjectResult<spSelAdditionalFeatures_Result> spSelAdditionalFeatures(Nullable<System.Guid> idMonthly)
        {
            var idMonthlyParameter = idMonthly.HasValue ?
                new ObjectParameter("IdMonthly", idMonthly) :
                new ObjectParameter("IdMonthly", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelAdditionalFeatures_Result>("spSelAdditionalFeatures", idMonthlyParameter);
        }
    
        public virtual ObjectResult<spSelectAdditionalFeatures_Result> spSelectAdditionalFeatures(Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.Guid> id)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectAdditionalFeatures_Result>("spSelectAdditionalFeatures", idRoomParameter, userIdParameter, idParameter);
        }
    
        public virtual ObjectResult<spSelectCompany_Result> spSelectCompany(string phone, string name)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectCompany_Result>("spSelectCompany", phoneParameter, nameParameter);
        }
    
        public virtual ObjectResult<spSelectUserAll_Result> spSelectUserAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectUserAll_Result>("spSelectUserAll");
        }
    
        public virtual ObjectResult<spSelectUserKYA_Result> spSelectUserKYA(string user, string password, string phone)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectUserKYA_Result>("spSelectUserKYA", userParameter, passwordParameter, phoneParameter);
        }
    
        public virtual ObjectResult<spSelMessageAdmin_Result> spSelMessageAdmin(Nullable<System.Guid> userId, Nullable<System.Guid> idAdmin, Nullable<bool> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var idAdminParameter = idAdmin.HasValue ?
                new ObjectParameter("IdAdmin", idAdmin) :
                new ObjectParameter("IdAdmin", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageAdmin_Result>("spSelMessageAdmin", userIdParameter, idAdminParameter, statusParameter);
        }
    
        public virtual ObjectResult<spSelMessageAdminAll_Result> spSelMessageAdminAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageAdminAll_Result>("spSelMessageAdminAll");
        }
    
        public virtual ObjectResult<spSelMessageAdminStatusAllWS_Result> spSelMessageAdminStatusAllWS(Nullable<System.Guid> adminID)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageAdminStatusAllWS_Result>("spSelMessageAdminStatusAllWS", adminIDParameter);
        }
    
        public virtual ObjectResult<spSelMessageAdminStatusXIDUSERWS_Result> spSelMessageAdminStatusXIDUSERWS(Nullable<System.Guid> adminID, Nullable<System.Guid> userID)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(System.Guid));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageAdminStatusXIDUSERWS_Result>("spSelMessageAdminStatusXIDUSERWS", adminIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<spSelMessageUser_Result> spSelMessageUser(Nullable<System.Guid> userId, Nullable<bool> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageUser_Result>("spSelMessageUser", userIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<spSelMessageUserStatusWS_Result> spSelMessageUserStatusWS(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageUserStatusWS_Result>("spSelMessageUserStatusWS", userIdParameter);
        }
    
        public virtual ObjectResult<spSelMessageUserWS_Result> spSelMessageUserWS(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMessageUserWS_Result>("spSelMessageUserWS", userIdParameter);
        }
    
        public virtual ObjectResult<spSelMonthlyPayment_Result> spSelMonthlyPayment(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMonthlyPayment_Result>("spSelMonthlyPayment", userIdParameter);
        }
    
        public virtual ObjectResult<spSelMonthlyPaymentXID_Result> spSelMonthlyPaymentXID(Nullable<System.Guid> userID, Nullable<System.Guid> iDMonthlyPayment)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var iDMonthlyPaymentParameter = iDMonthlyPayment.HasValue ?
                new ObjectParameter("IDMonthlyPayment", iDMonthlyPayment) :
                new ObjectParameter("IDMonthlyPayment", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelMonthlyPaymentXID_Result>("spSelMonthlyPaymentXID", userIDParameter, iDMonthlyPaymentParameter);
        }
    
        public virtual ObjectResult<spSelNotification_Result> spSelNotification(Nullable<System.Guid> idUser, Nullable<bool> typeUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var typeUserParameter = typeUser.HasValue ?
                new ObjectParameter("TypeUser", typeUser) :
                new ObjectParameter("TypeUser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelNotification_Result>("spSelNotification", idUserParameter, typeUserParameter);
        }
    
        public virtual ObjectResult<spSelRoom_Result> spSelRoom(Nullable<System.Guid> idRoom)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("idRoom", idRoom) :
                new ObjectParameter("idRoom", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRoom_Result>("spSelRoom", idRoomParameter);
        }
    
        public virtual ObjectResult<spSelRoomAll_Result> spSelRoomAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRoomAll_Result>("spSelRoomAll");
        }
    
        public virtual ObjectResult<spSelRoomService_Result> spSelRoomService(Nullable<System.Guid> idRoom, Nullable<System.Guid> idService)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("idRoom", idRoom) :
                new ObjectParameter("idRoom", typeof(System.Guid));
    
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("idService", idService) :
                new ObjectParameter("idService", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRoomService_Result>("spSelRoomService", idRoomParameter, idServiceParameter);
        }
    
        public virtual ObjectResult<spSelRoomServiceXIDRoom_Result> spSelRoomServiceXIDRoom(Nullable<System.Guid> idRoom)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("idRoom", idRoom) :
                new ObjectParameter("idRoom", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelRoomServiceXIDRoom_Result>("spSelRoomServiceXIDRoom", idRoomParameter);
        }
    
        public virtual ObjectResult<spSelService_Result> spSelService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelService_Result>("spSelService");
        }
    
        public virtual ObjectResult<spSelStatusMessage_Result> spSelStatusMessage(Nullable<System.Guid> idUser, Nullable<System.Guid> idAdmin, Nullable<bool> status)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var idAdminParameter = idAdmin.HasValue ?
                new ObjectParameter("IdAdmin", idAdmin) :
                new ObjectParameter("IdAdmin", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelStatusMessage_Result>("spSelStatusMessage", idUserParameter, idAdminParameter, statusParameter);
        }
    
        public virtual ObjectResult<spSelTenantsAll_Result> spSelTenantsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelTenantsAll_Result>("spSelTenantsAll");
        }
    
        public virtual ObjectResult<spSelTenantsID_Result> spSelTenantsID(Nullable<System.Guid> roomID, Nullable<System.Guid> userID)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(System.Guid));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelTenantsID_Result>("spSelTenantsID", roomIDParameter, userIDParameter);
        }
    
        public virtual int spUpdateAdditionalFeatures(Nullable<System.Guid> idAdditional, string description, Nullable<decimal> price, Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.Guid> id, Nullable<System.DateTime> dateCreated, Nullable<bool> status)
        {
            var idAdditionalParameter = idAdditional.HasValue ?
                new ObjectParameter("IdAdditional", idAdditional) :
                new ObjectParameter("IdAdditional", typeof(System.Guid));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateAdditionalFeatures", idAdditionalParameter, descriptionParameter, priceParameter, idRoomParameter, userIdParameter, idParameter, dateCreatedParameter, statusParameter);
        }
    
        public virtual int spUpdateCompany(Nullable<System.Guid> id, string name, string address, string telephone, Nullable<System.DateTime> date, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateCompany", idParameter, nameParameter, addressParameter, telephoneParameter, dateParameter, statusParameter);
        }
    
        public virtual int spUpdateMonthlyPayment(Nullable<System.Guid> id, string date, Nullable<decimal> price, Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.DateTime> dateCreated, Nullable<bool> status, Nullable<bool> statusActivePay)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var statusActivePayParameter = statusActivePay.HasValue ?
                new ObjectParameter("StatusActivePay", statusActivePay) :
                new ObjectParameter("StatusActivePay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateMonthlyPayment", idParameter, dateParameter, priceParameter, idRoomParameter, userIdParameter, dateCreatedParameter, statusParameter, statusActivePayParameter);
        }
    
        public virtual int spUpdateRooms(Nullable<System.Guid> idRoom, string nameRoom, Nullable<bool> statusRoom, Nullable<System.DateTime> date)
        {
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var nameRoomParameter = nameRoom != null ?
                new ObjectParameter("NameRoom", nameRoom) :
                new ObjectParameter("NameRoom", typeof(string));
    
            var statusRoomParameter = statusRoom.HasValue ?
                new ObjectParameter("StatusRoom", statusRoom) :
                new ObjectParameter("StatusRoom", typeof(bool));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRooms", idRoomParameter, nameRoomParameter, statusRoomParameter, dateParameter);
        }
    
        public virtual int spUpdateRoomService(Nullable<System.Guid> idRoomService, Nullable<System.Guid> idService, Nullable<System.Guid> idRoom, Nullable<System.DateTime> date, Nullable<bool> status)
        {
            var idRoomServiceParameter = idRoomService.HasValue ?
                new ObjectParameter("IdRoomService", idRoomService) :
                new ObjectParameter("IdRoomService", typeof(System.Guid));
    
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("IdService", idService) :
                new ObjectParameter("IdService", typeof(System.Guid));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRoomService", idRoomServiceParameter, idServiceParameter, idRoomParameter, dateParameter, statusParameter);
        }
    
        public virtual int spUpdateService(Nullable<System.Guid> idService, string nameService, Nullable<decimal> priceService, Nullable<bool> statusService, Nullable<System.DateTime> date)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("IdService", idService) :
                new ObjectParameter("IdService", typeof(System.Guid));
    
            var nameServiceParameter = nameService != null ?
                new ObjectParameter("NameService", nameService) :
                new ObjectParameter("NameService", typeof(string));
    
            var priceServiceParameter = priceService.HasValue ?
                new ObjectParameter("PriceService", priceService) :
                new ObjectParameter("PriceService", typeof(decimal));
    
            var statusServiceParameter = statusService.HasValue ?
                new ObjectParameter("StatusService", statusService) :
                new ObjectParameter("StatusService", typeof(bool));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateService", idServiceParameter, nameServiceParameter, priceServiceParameter, statusServiceParameter, dateParameter);
        }
    
        public virtual int spUpdateTenants(Nullable<System.Guid> idTenants, Nullable<System.Guid> idRoom, Nullable<System.Guid> userId, Nullable<System.DateTime> date, Nullable<bool> status)
        {
            var idTenantsParameter = idTenants.HasValue ?
                new ObjectParameter("IdTenants", idTenants) :
                new ObjectParameter("IdTenants", typeof(System.Guid));
    
            var idRoomParameter = idRoom.HasValue ?
                new ObjectParameter("IdRoom", idRoom) :
                new ObjectParameter("IdRoom", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateTenants", idTenantsParameter, idRoomParameter, userIdParameter, dateParameter, statusParameter);
        }
    
        public virtual int spUpdateUserKYA(Nullable<System.Guid> userId, string userName, string userUser, string userPassword, string userTelephone, string userAddress, Nullable<System.DateTime> userDateCreated, Nullable<System.DateTime> userDateModified, Nullable<bool> userActive)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userUserParameter = userUser != null ?
                new ObjectParameter("UserUser", userUser) :
                new ObjectParameter("UserUser", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userTelephoneParameter = userTelephone != null ?
                new ObjectParameter("UserTelephone", userTelephone) :
                new ObjectParameter("UserTelephone", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("UserAddress", userAddress) :
                new ObjectParameter("UserAddress", typeof(string));
    
            var userDateCreatedParameter = userDateCreated.HasValue ?
                new ObjectParameter("UserDateCreated", userDateCreated) :
                new ObjectParameter("UserDateCreated", typeof(System.DateTime));
    
            var userDateModifiedParameter = userDateModified.HasValue ?
                new ObjectParameter("UserDateModified", userDateModified) :
                new ObjectParameter("UserDateModified", typeof(System.DateTime));
    
            var userActiveParameter = userActive.HasValue ?
                new ObjectParameter("UserActive", userActive) :
                new ObjectParameter("UserActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateUserKYA", userIdParameter, userNameParameter, userUserParameter, userPasswordParameter, userTelephoneParameter, userAddressParameter, userDateCreatedParameter, userDateModifiedParameter, userActiveParameter);
        }
    
        public virtual int spUpdMessage(Nullable<System.Guid> userId, Nullable<System.Guid> idAdmin)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var idAdminParameter = idAdmin.HasValue ?
                new ObjectParameter("IdAdmin", idAdmin) :
                new ObjectParameter("IdAdmin", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdMessage", userIdParameter, idAdminParameter);
        }
    }
}
